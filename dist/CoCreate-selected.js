(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["CoCreateSelected"] = factory();
	else
		root["CoCreateSelected"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./CoCreate-components/CoCreate-selected/src/CoCreate-selected.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./CoCreate-components/CoCreate-selected/src/CoCreate-selected.js":
/*!************************************************************************!*\
  !*** ./CoCreate-components/CoCreate-selected/src/CoCreate-selected.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar CoCreateSelected = {\n  init: function init() {\n    this.initElement(document);\n  },\n  initElement: function initElement(container) {\n    var mainContainer = container || document;\n\n    if (!mainContainer.querySelectorAll) {\n      return;\n    }\n\n    var elements = mainContainer.querySelectorAll(\"[data-selected]\");\n\n    if (elements.length === 0 && mainContainer != document && mainContainer.hasAttribute(\"[data-selected]\")) {\n      elements = [mainContainer];\n    }\n\n    var self = this;\n    elements.forEach(function (element) {\n      return self.__initElementEvent(element);\n    });\n  },\n  __initElementEvent: function __initElementEvent(element) {\n    var selectedValue = element.getAttribute('data-selected') || \"\";\n    var values = selectedValue.split(',');\n\n    if (!values || values.length === 0) {\n      return;\n    }\n\n    values = values.map(function (x) {\n      return x.trim();\n    });\n    var self = this; // if (CoCreateObserver.getInitialized(element)) {\n    // \treturn;\n    // }\n\n    CoCreateObserver.setInitialized(element);\n    element.addEventListener('click', function () {\n      self.__changeElementStatus(element, values);\n    });\n    document.addEventListener('click', function (event) {\n      if (!element.hasAttribute(\"data-selected_group\") && !element.contains(event.target)) {\n        self.__removeSelectedStatus(element, values);\n      }\n    });\n  },\n  __changeElementStatus: function __changeElementStatus(element, values) {\n    var target_attribute = element.dataset[\"selected_attribute\"] || 'class';\n\n    var elements = this.__getTargetElements(element);\n\n    var self = this;\n    var selectedGroup = element.dataset['selected_group'];\n    var group = selectedGroup ? \"[data-selected_group=\\\"\".concat(selectedGroup, \"\\\"]\") : ':not([data-selected_group])';\n    var previouSelected = document.querySelector('[data-selected]' + group + '[selected]'); // if (previouSelected.isSameNode(element)) {\n    // \treturn ;\n    // }\n\n    if (previouSelected) {\n      var previousValues = previouSelected.dataset['selected'].split(',').map(function (x) {\n        return x.trim();\n      });\n\n      this.__removeSelectedStatus(previouSelected, previousValues);\n    }\n\n    values = values.map(function (x) {\n      return x.trim();\n    });\n    elements.forEach(function (el) {\n      self.setValue(el, target_attribute, values);\n    });\n  },\n  __removeSelectedStatus: function __removeSelectedStatus(element, values) {\n    var attrName = element.dataset[\"selected_attribute\"] || 'class';\n\n    var elements = this.__getTargetElements(element);\n\n    elements.forEach(function (el) {\n      if (attrName === 'class') {\n        var attrValues = (el.getAttribute(attrName) || \"\").split(' ').map(function (x) {\n          return x.trim();\n        });\n        var currentValue = values.filter(function (x) {\n          return attrValues.includes(x);\n        })[0] || '';\n\n        if (currentValue) {\n          el.classList.remove(currentValue);\n        }\n      } else {\n        el.setAttribute(attrName, \"\");\n      }\n\n      el.removeAttribute('selected');\n    });\n  },\n  setValue: function setValue(element, attrName, values) {\n    var currentAttrValue = element.getAttribute(attrName) || \"\";\n    var attrValues = currentAttrValue;\n\n    if (attrName === 'class') {\n      attrValues = currentAttrValue.split(' ').map(function (x) {\n        return x.trim();\n      });\n    }\n\n    var oldValue = values.filter(function (x) {\n      return attrValues.includes(x);\n    })[0] || '';\n\n    var newValue = this.__getNextValue(values, oldValue);\n\n    element.setAttribute('selected', \"\");\n\n    if (oldValue === newValue) {\n      return;\n    }\n\n    if (attrName === 'class') {\n      if (oldValue != '') {\n        element.classList.remove(oldValue);\n      }\n\n      if (newValue != '') {\n        element.classList.add(newValue);\n      }\n    } else {\n      element.setAttribute(attrName, newValue);\n    }\n  },\n  __getTargetElements: function __getTargetElements(element) {\n    var targetSelector = element.dataset[\"selected_target\"];\n    var elements = [element];\n\n    if (targetSelector) {\n      elements = Array.from(document.querySelectorAll(targetSelector));\n      elements.push(element);\n    }\n\n    return elements;\n  },\n  __getNextValue: function __getNextValue(values, val) {\n    var size = values.length;\n    var nn = values.indexOf(val);\n\n    if (nn == -1) {\n      return values[0];\n    } else {\n      return values[(nn + 1) % size];\n    }\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (CoCreateSelected);\nCoCreateSelected.init(); // CoCreateInit.register('CoCreateSelected', CoCreateSelected, CoCreateSelected.initElement);\n\nCoCreateObserver.add({\n  name: 'CoCreateSelected',\n  observe: ['subtree', 'childList'],\n  include: '[data-selected]',\n  task: function task(mutation) {\n    CoCreateSelected.initElement(mutation.target);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./CoCreate-components/CoCreate-selected/src/CoCreate-selected.js\n");

/***/ })

/******/ })["default"];
});